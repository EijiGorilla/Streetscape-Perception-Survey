/***************************************************************************
 * The contents of this file were generated with Amplify Studio.           *
 * Please refrain from making any modifications to this file.              *
 * Any changes to this file will be overwritten when running amplify pull. *
 **************************************************************************/

import * as React from "react";
import { GridProps, TextFieldProps } from "@aws-amplify/ui-react";
export declare type EscapeHatchProps = {
    [elementHierarchy: string]: Record<string, unknown>;
} | null;
export declare type VariantValues = {
    [key: string]: string;
};
export declare type Variant = {
    variantValues: VariantValues;
    overrides: EscapeHatchProps;
};
export declare type ValidationResponse = {
    hasError: boolean;
    errorMessage?: string;
};
export declare type ValidationFunction<T> = (value: T, validationResponse: ValidationResponse) => ValidationResponse | Promise<ValidationResponse>;
export declare type SurveyResultCreateFormInputValues = {
    comfort_1?: string;
    comfort_2?: string;
    comfort_3?: string;
    comfort_4?: string;
    comfort_5?: string;
    comfort_6?: string;
    thermal_comfort_1?: string;
    thermal_comfort_2?: string;
    thermal_comfort_3?: string;
    thermal_comfort_4?: string;
    thermal_comfort_5?: string;
    thermal_comfort_6?: string;
    temperature?: string;
    sun_intensity?: string;
    heat_sources?: string;
    humidity?: string;
    wind_velocity?: string;
    traffic_flow?: string;
    greenery?: string;
    shading_area?: string;
    construction_material?: string;
    imageability?: string;
    enclosure?: string;
    human_scale?: string;
    transparency?: string;
    complexity?: string;
    safe?: string;
    lively?: string;
    beautiful?: string;
    wealthy?: string;
    boring?: string;
    depressing?: string;
    eating_drinking?: string[];
    nature_exploration?: string[];
    community_gathering?: string[];
    citywalking?: string[];
    urban_sightseeing?: string[];
    streetscape_perception?: string[];
    functionality?: string[];
    accessibility?: string[];
    contact_density?: string[];
    email?: string;
    nus_id?: string;
};
export declare type SurveyResultCreateFormValidationValues = {
    comfort_1?: ValidationFunction<string>;
    comfort_2?: ValidationFunction<string>;
    comfort_3?: ValidationFunction<string>;
    comfort_4?: ValidationFunction<string>;
    comfort_5?: ValidationFunction<string>;
    comfort_6?: ValidationFunction<string>;
    thermal_comfort_1?: ValidationFunction<string>;
    thermal_comfort_2?: ValidationFunction<string>;
    thermal_comfort_3?: ValidationFunction<string>;
    thermal_comfort_4?: ValidationFunction<string>;
    thermal_comfort_5?: ValidationFunction<string>;
    thermal_comfort_6?: ValidationFunction<string>;
    temperature?: ValidationFunction<string>;
    sun_intensity?: ValidationFunction<string>;
    heat_sources?: ValidationFunction<string>;
    humidity?: ValidationFunction<string>;
    wind_velocity?: ValidationFunction<string>;
    traffic_flow?: ValidationFunction<string>;
    greenery?: ValidationFunction<string>;
    shading_area?: ValidationFunction<string>;
    construction_material?: ValidationFunction<string>;
    imageability?: ValidationFunction<string>;
    enclosure?: ValidationFunction<string>;
    human_scale?: ValidationFunction<string>;
    transparency?: ValidationFunction<string>;
    complexity?: ValidationFunction<string>;
    safe?: ValidationFunction<string>;
    lively?: ValidationFunction<string>;
    beautiful?: ValidationFunction<string>;
    wealthy?: ValidationFunction<string>;
    boring?: ValidationFunction<string>;
    depressing?: ValidationFunction<string>;
    eating_drinking?: ValidationFunction<string>;
    nature_exploration?: ValidationFunction<string>;
    community_gathering?: ValidationFunction<string>;
    citywalking?: ValidationFunction<string>;
    urban_sightseeing?: ValidationFunction<string>;
    streetscape_perception?: ValidationFunction<string>;
    functionality?: ValidationFunction<string>;
    accessibility?: ValidationFunction<string>;
    contact_density?: ValidationFunction<string>;
    email?: ValidationFunction<string>;
    nus_id?: ValidationFunction<string>;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type SurveyResultCreateFormOverridesProps = {
    SurveyResultCreateFormGrid?: PrimitiveOverrideProps<GridProps>;
    comfort_1?: PrimitiveOverrideProps<TextFieldProps>;
    comfort_2?: PrimitiveOverrideProps<TextFieldProps>;
    comfort_3?: PrimitiveOverrideProps<TextFieldProps>;
    comfort_4?: PrimitiveOverrideProps<TextFieldProps>;
    comfort_5?: PrimitiveOverrideProps<TextFieldProps>;
    comfort_6?: PrimitiveOverrideProps<TextFieldProps>;
    thermal_comfort_1?: PrimitiveOverrideProps<TextFieldProps>;
    thermal_comfort_2?: PrimitiveOverrideProps<TextFieldProps>;
    thermal_comfort_3?: PrimitiveOverrideProps<TextFieldProps>;
    thermal_comfort_4?: PrimitiveOverrideProps<TextFieldProps>;
    thermal_comfort_5?: PrimitiveOverrideProps<TextFieldProps>;
    thermal_comfort_6?: PrimitiveOverrideProps<TextFieldProps>;
    temperature?: PrimitiveOverrideProps<TextFieldProps>;
    sun_intensity?: PrimitiveOverrideProps<TextFieldProps>;
    heat_sources?: PrimitiveOverrideProps<TextFieldProps>;
    humidity?: PrimitiveOverrideProps<TextFieldProps>;
    wind_velocity?: PrimitiveOverrideProps<TextFieldProps>;
    traffic_flow?: PrimitiveOverrideProps<TextFieldProps>;
    greenery?: PrimitiveOverrideProps<TextFieldProps>;
    shading_area?: PrimitiveOverrideProps<TextFieldProps>;
    construction_material?: PrimitiveOverrideProps<TextFieldProps>;
    imageability?: PrimitiveOverrideProps<TextFieldProps>;
    enclosure?: PrimitiveOverrideProps<TextFieldProps>;
    human_scale?: PrimitiveOverrideProps<TextFieldProps>;
    transparency?: PrimitiveOverrideProps<TextFieldProps>;
    complexity?: PrimitiveOverrideProps<TextFieldProps>;
    safe?: PrimitiveOverrideProps<TextFieldProps>;
    lively?: PrimitiveOverrideProps<TextFieldProps>;
    beautiful?: PrimitiveOverrideProps<TextFieldProps>;
    wealthy?: PrimitiveOverrideProps<TextFieldProps>;
    boring?: PrimitiveOverrideProps<TextFieldProps>;
    depressing?: PrimitiveOverrideProps<TextFieldProps>;
    eating_drinking?: PrimitiveOverrideProps<TextFieldProps>;
    nature_exploration?: PrimitiveOverrideProps<TextFieldProps>;
    community_gathering?: PrimitiveOverrideProps<TextFieldProps>;
    citywalking?: PrimitiveOverrideProps<TextFieldProps>;
    urban_sightseeing?: PrimitiveOverrideProps<TextFieldProps>;
    streetscape_perception?: PrimitiveOverrideProps<TextFieldProps>;
    functionality?: PrimitiveOverrideProps<TextFieldProps>;
    accessibility?: PrimitiveOverrideProps<TextFieldProps>;
    contact_density?: PrimitiveOverrideProps<TextFieldProps>;
    email?: PrimitiveOverrideProps<TextFieldProps>;
    nus_id?: PrimitiveOverrideProps<TextFieldProps>;
} & EscapeHatchProps;
export declare type SurveyResultCreateFormProps = React.PropsWithChildren<{
    overrides?: SurveyResultCreateFormOverridesProps | undefined | null;
} & {
    clearOnSuccess?: boolean;
    onSubmit?: (fields: SurveyResultCreateFormInputValues) => SurveyResultCreateFormInputValues;
    onSuccess?: (fields: SurveyResultCreateFormInputValues) => void;
    onError?: (fields: SurveyResultCreateFormInputValues, errorMessage: string) => void;
    onChange?: (fields: SurveyResultCreateFormInputValues) => SurveyResultCreateFormInputValues;
    onValidate?: SurveyResultCreateFormValidationValues;
} & React.CSSProperties>;
export default function SurveyResultCreateForm(props: SurveyResultCreateFormProps): React.ReactElement;
